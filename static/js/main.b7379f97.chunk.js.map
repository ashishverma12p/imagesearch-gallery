{"version":3,"sources":["components/imageResults/imageResults.js","components/imageResults/search/Search.js","App.js","reportWebVitals.js","index.js"],"names":["ImageResults","state","open","currentImg","handleOpen","img","setState","handleClose","imageList","images","this","props","GridList","cols","map","title","tags","actionIcon","onClick","largeImageURL","color","src","alt","id","actions","label","primary","style","marginLeft","marginRight","marginTop","modal","onRequestClose","width","Component","Search","searchText","apiUrl","apiKey","onTextChange","e","val","target","value","name","axios","get","then","res","data","hits","catch","err","console","log","type","backgroundColor","paddingTop","paddingLeft","fontSize","borderTopStyle","borderRightStyle","borderLeftStyle","outline","borderBottomStyle","placeholder","onChange","length","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2VAqEeA,E,4MA7DXC,MAAM,CACFC,MAAK,EACLC,WAAW,I,EAEfC,WAAW,SAAAC,GACP,EAAKC,SAAS,CAACJ,MAAK,EAAKC,WAAWE,K,EAExCE,YAAY,WACR,EAAKD,SAAS,CAACJ,MAAK,K,4CAExB,WACC,IACOM,EADR,OAEWC,EAAQC,KAAKC,MAAbF,OAIHD,EAFDC,EAGK,cAACG,EAAA,SAAD,CAAUC,KAAM,EAAhB,SACGJ,EAAOK,KAAI,SAAAT,GAAG,OACT,cAAC,WAAD,CACAU,MAAOV,EAAIW,KAEXC,WACI,cAAC,IAAD,CAAYC,QAAS,kBAAI,EAAKd,WAAWC,EAAIc,gBAA7C,SACA,cAAC,IAAD,CAAQC,MAAM,YALlB,SASA,qBAAKC,IAAKhB,EAAIc,cAAeG,IAAI,MAP5BjB,EAAIkB,SAeX,KAEd,IAAMC,EAAQ,CACV,cAAC,IAAD,CAAaC,MAAM,QAAQC,SAAS,EAAMR,QAASR,KAAKH,eAE5D,OACI,sBAAKoB,MAAO,CAACC,WAAW,GAAGC,YAAY,GAAGC,UAAU,IAApD,UACCtB,EACD,cAAC,IAAD,CACAgB,QAASA,EACTO,OAAO,EACP7B,KAAMQ,KAAKT,MAAMC,KACjB8B,eAAgBtB,KAAKH,YAJrB,SAMA,qBAAKc,IAAKX,KAAKT,MAAME,WAAYmB,IAAI,GAAGK,MAAO,CAACM,MAAM,mB,GApDvCC,aC0DZC,E,4MA7DXlC,MAAM,CACFmC,WAAW,GACXC,OAAO,0BACPC,OAAO,qCACP7B,OAAO,I,EAEX8B,aAAa,SAACC,GACV,IAAMC,EAAID,EAAEE,OAAOC,MACnB,EAAKrC,SAAL,eAAgBkC,EAAEE,OAAOE,KAAMH,IAAK,WACvB,KAANA,EAEC,EAAKnC,SAAS,CAACG,OAAO,KAG1BoC,IACCC,IADD,UAEO,EAAK7C,MAAMoC,OAFlB,iBAEiC,EAAKpC,MAAMqC,OAF5C,cAGQ,EAAKrC,MAAMmC,WAHnB,sCAMCW,MAAK,SAAAC,GAAG,OAAE,EAAK1C,SAAS,CAACG,OAAOuC,EAAIC,KAAKC,UACzCC,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,U,4CAIhC,WAEI,OADAC,QAAQC,IAAI5C,KAAKT,MAAMQ,QAEnB,gCACA,uBAAO8C,KAAK,OACZ5B,MACC,CAAC6B,gBAAgB,QAClBpC,MAAM,QACNQ,WAAW,IACXE,UAAU,IACV2B,WAAW,GACXC,YAAY,GACZC,SAAS,GACTC,eAAe,SACfC,iBAAiB,SACjBC,gBAAgB,SAChBC,QAAQ,OACRC,kBAAkB,UAItBC,YAAY,oBACZrB,KAAK,aACLD,MAAOjC,KAAKT,MAAMmC,WAClB8B,SAAUxD,KAAK6B,eAEvB,uBACC7B,KAAKT,MAAMQ,OAAO0D,OAAO,EAAG,cAAC,EAAD,CAAc1D,OAAQC,KAAKT,MAAMQ,SAAW,Y,GArDpDyB,a,2BCcNkC,E,4JAXb,WACE,OACE,cAAC,IAAD,UACA,8BACA,cAAC,EAAD,Y,GALYlC,aCOHmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b7379f97.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {GridList,GridTile} from 'material-ui/GridList';\r\nimport IconButton from 'material-ui/IconButton';\r\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\r\nimport Dialog from 'material-ui/Dialog';\r\nimport FlatButton from 'material-ui/FlatButton';\r\nclass ImageResults extends Component{\r\n    state={\r\n        open:false,\r\n        currentImg:''\r\n    }\r\n    handleOpen=img=>{\r\n        this.setState({open:true,currentImg:img})\r\n    }\r\n    handleClose=()=>{\r\n        this.setState({open:false});\r\n    }\r\n    render()\r\n    {\r\n        let imageList;\r\n        const {images}=this.props\r\n\r\n        if(images)\r\n        {\r\n            imageList=(\r\n                <GridList cols={4}>\r\n                {  images.map(img=>(\r\n                        <GridTile\r\n                        title={img.tags}\r\n                        key={img.id}\r\n                        actionIcon={\r\n                            <IconButton onClick={()=>this.handleOpen(img.largeImageURL)}>\r\n                            <ZoomIn color=\"white\" />\r\n                            </IconButton>\r\n                        }\r\n                        >\r\n                        <img src={img.largeImageURL} alt=\"\" />\r\n                        </GridTile>\r\n                    ))\r\n                }\r\n                </GridList>\r\n            )\r\n        }\r\n        else{\r\n            imageList=null;\r\n        }\r\n        const actions=[\r\n            <FlatButton  label=\"Close\" primary={true} onClick={this.handleClose}/>\r\n        ]\r\n        return(\r\n            <div style={{marginLeft:50,marginRight:50,marginTop:20}}>\r\n            {imageList}\r\n            <Dialog\r\n            actions={actions}\r\n            modal={false}\r\n            open={this.state.open}\r\n            onRequestClose={this.handleClose}\r\n            >\r\n            <img src={this.state.currentImg} alt=\"\" style={{width:'100%'}} />\r\n            </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nImageResults.propTypes={\r\n    images:PropTypes.array.isRequired\r\n}\r\n\r\nexport default ImageResults;","import React,{Component} from 'react';\r\nimport axios from 'axios';\r\nimport ImageResults from \"../imageResults\";\r\nclass Search extends Component{\r\n    state={\r\n        searchText:'',\r\n        apiUrl:'https://pixabay.com/api',\r\n        apiKey:'22689114-b84548c66d52c39adde8d510d',\r\n        images:[]\r\n    };\r\n    onTextChange=(e)=>{\r\n        const val=e.target.value;\r\n        this.setState({[e.target.name]:val},()=>{\r\n            if(val==='')\r\n            {\r\n                this.setState({images:[]});\r\n            }\r\n            else{\r\n            axios\r\n            .get(\r\n                `${this.state.apiUrl}/?key=${this.state.apiKey}&q=${\r\n                    this.state.searchText\r\n                }&image_type=photo&safesearch=true`\r\n            )\r\n            .then(res=>this.setState({images:res.data.hits}))\r\n            .catch(err=>console.log(err));\r\n            }\r\n        });\r\n    };\r\n    render(){\r\n        console.log(this.state.images);\r\n        return(\r\n            <div>\r\n            <input type=\"text\" \r\n            style=\r\n            {{backgroundColor:'black',\r\n            color:'white',\r\n            marginLeft:570,\r\n            marginTop:100,\r\n            paddingTop:20,\r\n            paddingLeft:70,\r\n            fontSize:30,\r\n            borderTopStyle:\"hidden\",\r\n            borderRightStyle:\"hidden\",\r\n            borderLeftStyle:\"hidden\",\r\n            outline:\"none\",\r\n            borderBottomStyle:\"groove\",\r\n\r\n        \r\n        }}\r\n        placeholder=\"Search for images\"\r\n        name=\"searchText\"\r\n        value={this.state.searchText}\r\n        onChange={this.onTextChange}\r\n             />\r\n<br />\r\n{this.state.images.length>0?(<ImageResults images={this.state.images}/>):null}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Search;","import React, { Component } from 'react';\nimport Search from \"./components/imageResults/search/Search\";\nimport './App.css';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\n\nclass App extends Component{\n  render(){\n    return(\n      <MuiThemeProvider>\n      <div>\n      <Search />\n      </div>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}